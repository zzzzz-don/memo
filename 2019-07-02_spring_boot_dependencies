## まとめ
https://start.spring.io/

| 分類  | ライブラリ | 詳細 |
|:-----------|:------------|:------------|
| Developer Tools | Spring Boot DevTools| Provides fast application restarts, LiveReload, and configurations for enhanced development experience.|
||Lombok|Java annotation library which helps to reduce boilerplate code.|
||Spring Configuration Processor|Generate metadata for developers to offer contextual help and “code completion” when working with custom configuration keys (ex.application.properties/.yml files).|
|Web|Spring Web Starter|Build web, including RESTful, applications using Spring MVC. Uses Tomcat as the default embedded container.|
||Spring Reactive Web|Build reactive web applications with Spring WebFlux and Netty.|
||Rest Repositories|Exposing Spring Data repositories over REST via Spring Data REST.|
||Spring Session|Provides an API and implementations for managing user session information.|
||Rest Repositories HAL Browser|Browsing Spring Data REST repositories in your browser.|
||Spring HATEOAS|Eases the creation of RESTful APIs that follow the HATEOAS principle when working with Spring / Spring MVC.|
||Spring Web Services|Facilitates contract-first SOAP development. Allows for the creation of flexible web services using one of the many ways to manipulate XML payloads.|
||Jersey|Framework for developing RESTful Web Services in Java that provides support for JAX-RS APIs.|
||Spring REST Docs|Document RESTful services by combining hand-written with Asciidoctor and auto-generated snippets produced with Spring MVC Test.|
||Vaadin|Java framework for building rich client apps based on Web components.|
|Template Engines|Thymeleaf|A modern server-side Java template engine for both web and standalone environments. Allows HTML to be correctly displayed in browsers and as static prototypes.|
||Apache Freemarker|Java library to generate text output (HTML web pages, e-mails, configuration files, source code, etc.) based on templates and changing data.|
||Mustache|Logic-less Templates. There are no if statements, else clauses, or for loops. Instead there are only tags.|
||Groovy Templates|Groovy templating engine|
|Security|Spring Security|Highly customizable authentication and access-control framework for Spring applications.|
||OAuth2 Client|Spring Boot integration for Spring Security's OAuth2/OpenID Connect client features.|
||OAuth2 Resource Server|Spring Boot integration for Spring Security's OAuth2 resource server features.|
||Spring LDAP|Makes it easier to build Spring based applications that use the Lightweight Directory Access Protocol.|
||Okta|Okta specific configuration for Spring Security/Spring Boot OAuth2 features. Enable your Spring Boot application to work with Okta via OAuth 2.0/OIDC.|
|SQL|Spring Data JPA|Persist data in SQL stores with Java Persistence API using Spring Data and Hibernate.|
||MySQL Driver|MySQL JDBC driver.|
||H2 Database|Provides a fast in-memory database that supports JDBC API, with a small (2mb) footprint. Supports embedded and server modes as well as a browser based console application.|
||JDBC API|Database Connectivity API that defines how a client may connect and query a database.|
||MyBatis Framework|Persistence framework with support for custom SQL, stored procedures and advanced mappings. MyBatis couples objects with stored procedures or SQL statements using a XML descriptor or annotations.|
||PostgreSQL Driver|An open source JDBC driver that allows Java programs to connect to a PostgreSQL database using standard, database independent Java code.|
||MS SQL Server Driver|A Type 4 JDBC driver that provides access to Microsoft SQL Server and Azure SQL Database from any Java application.|
||HyperSQL Database|Lightweight 100% Java SQL Database Engine.|
||Apache Derby Database|An open source relational database implemented entirely in Java.|
||Liquibase Migration|Liquibase database migration and source control library.|
||Flyway Migration|Version control for your database so you can migrate from any version (incl. an empty database) to the latest version of the schema.|
||JOOQ Access Layer|Generate Java code from your database and build type safe SQL queries through a fluent API.|
|NoSQL|Spring Data Redis (Access+Driver)|Advanced and thread-safe Java Redis client for synchronous, asynchronous, and reactive usage. Supports Cluster, Sentinel, Pipelining, Auto-Reconnect, Codecs and much more.|
||Spring Data Reactive Redis|Access Redis key-value data stores in a reactive fashion with Spring Data Redis.|
||Spring Data MongoDB|Store data in flexible, JSON-like documents, meaning fields can vary from document to document and data structure can be changed over time.|
||Spring Data Reactive MongoDB|Provides asynchronous stream processing with non-blocking back pressure for MongoDB. Implements the Reactive Streams API.|
||Embedded MongoDB database|Provides a platform neutral way for running MongoDB in unit tests.|
||Spring Data Elasticsearch (Access+Driver)|A distributed, RESTful search and analytics engine with Spring Data Elasticsearch.|
||Spring Data Apache Solr|Solr is an open source enterprise search platform built on Apache Lucene.|
||Spring Data Apache Cassandra|A free and open-source, distributed, NoSQL database management system that offers high-scalability and high-performance.|
||Spring Data Reactive Cassandra|Access Cassandra NoSQL Database in a reactive fashion with Spring Data Cassandra.|
||Spring Data Couchbase|NoSQL document-oriented database that offers in memory-first architecture, geo-distributed deployments, and workload isolation.|
||Spring Data Reactive Couchbase|Access Couchbase NoSQL database in a reactive fashion with Spring Data Couchbase.|
||Spring Data Neo4j|An open source NoSQL database that stores data structured as graphs consisting of nodes, connected by relationships.|
|Messaging|Spring Integration|Adds support for Enterprise Integration Patterns. Enables lightweight messaging and supports integration with external systems via declarative adapters.|
||Spring for RabbitMQ|Gives your applications a common platform to send and receive messages, and your messages a safe place to live until received.|
||Spring for Apache Kafka|Publish, subscribe, store, and process streams of records.|
||Spring for Apache Kafka Streams|Building stream processing applications with Apache Kafka Streams.|
||Spring for Apache ActiveMQ 5|Spring JMS support with Apache ActiveMQ 'Classic'|
||Spring for Apache ActiveMQ Artemis|Spring JMS support with Apache ActiveMQ Artemis|
||WebSocket|Build WebSocket applications with SockJS and STOMP.|
|I/O|Spring Batch|Batch applications with transactions, retry/skip and chunk based processing.|
||Java Mail Sender|Send email using Java Mail and Spring Framework's JavaMailSender.|
||Quartz Scheduler|Schedule jobs using Quartz.|
||Spring cache abstraction|Provides cache-related operations, such as the ability to update the content of the cache, but does not provide the actual data store.|
|Ops|Spring Boot Actuator|Supports built in (or custom) endpoints that let you monitor and manage your application - such as application health, metrics, sessions, etc.|
||Spring Boot Admin (Client)|Required for your application to register with a Spring Boot Admin Server instance.|
||Spring Boot Admin (Server)|A community project to manage and monitor your Spring Boot applications. Provides a UI on top of the Spring Boot Actuator endpoints.|




Spring LDAP
Makes it easier to build Spring based applications that use the Lightweight Directory Access Protocol.
Okta
Okta specific configuration for Spring Security/Spring Boot OAuth2 features. Enable your Spring Boot application to work with Okta via OAuth 2.0/OIDC.
